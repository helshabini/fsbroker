//go:build darwin
// +build darwin

package fsbroker

import (
	"os"
	"path/filepath"
	"strings"
	"syscall"
)

// isSystemFile checks if the file is a common macOS system or metadata file.
func isSystemFile(name string) bool {
	// Base filenames commonly generated by macOS
	base := strings.ToLower(filepath.Base(name))
	switch base {
	case ".ds_store", ".appledouble", ".spotlight-v100", ".temporaryitems",
		".trashes", ".fseventsd", ".volumeicon.icns", "icon\r",
		".documentrevisions-v100", ".pkinstallsandboxmanager", ".apdisk":
		return true
	}

	// Match patterns for resource fork or metadata files
	return strings.HasPrefix(base, "._") || base == ".com.apple.timemachine.donotpresent"
}

// isHiddenFile checks if a file is hidden on Unix-like systems.
func isHiddenFile(path string) (bool, error) {
	// On Unix-like platforms (Linux, macOS), hidden files start with a dot
	return strings.HasPrefix(filepath.Base(path), "."), nil
}

func FromOSInfo(path string, fileinfo os.FileInfo) *Info {
	sys := fileinfo.Sys()
	sysstat, ok := sys.(*syscall.Stat_t)
	if !ok {
		return nil
	}

	return &Info{
		Id:      sysstat.Ino,
		Path:    path,
		Size:    uint64(fileinfo.Size()),
		ModTime: fileinfo.ModTime(),
		Mode:    uint32(fileinfo.Mode()),
	}
}
